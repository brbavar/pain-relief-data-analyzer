{"ast":null,"code":"var _jsxFileName = \"/Users/benbavar/pain-relief-data-analyzer/src/pages/ReportPainLevels.js\",\n  _s = $RefreshSig$();\n// import ReactSlider from 'react-slider';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportPainLevels = () => {\n  _s();\n  const [painLevel, setPainLevel] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      defaultValue: \"0\",\n      min: \"0\",\n      max: \"10\",\n      onInput: () => setPainLevel(this.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n      children: painLevel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportPainLevels, \"lWN8g2CzwanVX+wPEslC3zSDIP8=\");\n_c = ReportPainLevels;\nexport default ReportPainLevels;\nvar _c;\n$RefreshReg$(_c, \"ReportPainLevels\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ReportPainLevels","_s","painLevel","setPainLevel","children","type","defaultValue","min","max","onInput","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/benbavar/pain-relief-data-analyzer/src/pages/ReportPainLevels.js"],"sourcesContent":["// import ReactSlider from 'react-slider';\nimport { useState } from 'react';\n\nconst ReportPainLevels = () => {\n  const [painLevel, setPainLevel] = useState(0);\n\n  return (\n    <body>\n      {/* <ReactSlider /> */}\n      <input\n        type='range'\n        defaultValue='0'\n        min='0'\n        max='10'\n        onInput={() => setPainLevel(this.value)}\n      />\n      <output>{painLevel}</output>\n      {/* <datalist id='ticks'>\n        <option>0</option>\n        <option>1</option>\n        <option>2</option>\n        <option>3</option>\n        <option>4</option>\n        <option>5</option>\n        <option>6</option>\n        <option>7</option>\n        <option>8</option>\n        <option>9</option>\n        <option>10</option>\n      </datalist> */}\n    </body>\n  );\n};\n\nexport default ReportPainLevels;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAE7C,oBACEE,OAAA;IAAAK,QAAA,gBAEEL,OAAA;MACEM,IAAI,EAAC,OAAO;MACZC,YAAY,EAAC,GAAG;MAChBC,GAAG,EAAC,GAAG;MACPC,GAAG,EAAC,IAAI;MACRC,OAAO,EAAEA,CAAA,KAAMN,YAAY,CAAC,IAAI,CAACO,KAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACFf,OAAA;MAAAK,QAAA,EAASF;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAcxB,CAAC;AAEX,CAAC;AAACb,EAAA,CA7BID,gBAAgB;AAAAe,EAAA,GAAhBf,gBAAgB;AA+BtB,eAAeA,gBAAgB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}